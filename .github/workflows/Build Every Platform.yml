name: Build_Every_Platform

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Android_Build-using-Swift-CLI:
    if: false #Not aware of an action for Android yet
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Swift Version
      run: swift --version
    - name: Build
      run: swift build

  iOS_Build-using-Xcode:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v3
    - name: Select Xcode version
      run: sudo xcode-select -s '/Applications/Xcode_16.0.app/Contents/Developer'
    - name: Swift Version
      run: swift --version
    - name: Build
      run: xcodebuild -scheme ConditionalBugs -destination "platform=tvOS,name=Any tvOS Device"

  Linux_Build-using-Swift-CLI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Swiftly
      run: curl -L https://swiftlang.github.io/swiftly/swiftly-install.sh -o swiftly-install.sh;
           chmod 775 swiftly-install.sh;
           ./swiftly-install.sh --disable-confirmation
    - name: Install Swift
      run: swiftly install latest
    - name: Swift Version
      run: swift --version
    - name: Build
      run: swift build

  MacCatalyst_Build-using-Xcode:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v3
    - name: Select Xcode version
      run: sudo xcode-select -s '/Applications/Xcode_16.0.app/Contents/Developer'
    - name: Swift Version
      run: swift --version
    - name: Build
      run: xcodebuild -scheme ConditionalBugs -destination "platform=macOS,variant=Mac Catalyst"

  macOS_Build-using-Swift-CLI:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v3
    - name: Select Xcode version
      run: sudo xcode-select -s '/Applications/Xcode_16.0.app/Contents/Developer'
    - name: Swift Version
      run: swift --version
    - name: Build
      run: swift build

  macOS_Build-using-Xcode:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v3
    - name: Select Xcode version
      run: sudo xcode-select -s '/Applications/Xcode_16.0.app/Contents/Developer'
    - name: Swift Version
      run: swift --version
    - name: Build
      run: xcodebuild -scheme ConditionalBugs -destination "platform=macOS,name=Any Mac"

  tvOS_Build-using-Xcode:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v3
    - name: Select Xcode version
      run: sudo xcode-select -s '/Applications/Xcode_16.0.app/Contents/Developer'
    - name: Swift Version
      run: swift --version
    - name: Build
      run: xcodebuild -scheme ConditionalBugs -destination "platform=tvOS,name=Any tvOS Device"

  WASI_Build-using-Swift-CLI-Carton-Plugin:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/swiftwasm/carton:latest
    steps:
    - uses: actions/checkout@v3
    - name: Swift Version
      run: swift --version
    - name: Build
      run: swift run carton bundle

  watchOS_Build-using-Xcode:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v3
    - name: Select Xcode version
      run: sudo xcode-select -s '/Applications/Xcode_16.0.app/Contents/Developer'
    - name: Swift Version
      run: swift --version
    - name: Build
      run: xcodebuild -scheme ConditionalBugs -destination "platform=watchOS,name=Any watchOS Device"

  visionOS_Build-using-Xcode:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v3
    - name: Select Xcode version
      run: sudo xcode-select -s '/Applications/Xcode_16.0.app/Contents/Developer'
    - name: Swift Version
      run: swift --version
    - name: Build
      run: xcodebuild -scheme ConditionalBugs -destination "platform=visionOS,name=Any visionOS Device"

  Windows_Build-using-Swift-CLI:
    runs-on: windows-latest
    steps:
    - uses: compnerd/gha-setup-swift@main
      with:
          branch: swift-6.0-release
          tag: 6.0-RELEASE
    - uses: actions/checkout@v3
    - name: Swift Version
      run: swift --version
    - name: Build
      run: swift build
